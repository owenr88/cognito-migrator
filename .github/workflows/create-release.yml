name: Create release

on:
  pull_request:
    types: [closed]
    branches:
      - "main"

jobs:
  build:
    if: startsWith(github.head_ref, 'release/') &&  github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm test

  create-release:
    if: startsWith(github.head_ref, 'release/') &&  github.event.pull_request.merged == true
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - run: npm ci

      - name: Split branch name
        env:
          BRANCH: ${{ github.ref_name }}
        id: split
        run: echo "::set-output name=version::${release##*/}"

      - run: npm pkg set version=${{ steps.split.outputs.version }} --workspaces

      - name: Commit changes with the version
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: tag and release"
          branch: main

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.split.outputs.version }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: $GITHUB_REF_NAME
      #     release_name: $GITHUB_REF_NAME
      #     # body: |
      #     #   Changes in this Release
      #     #   - First Change
      #     #   - Second Change
      #     draft: false
      #     prerelease: false
      # - run: git tag -fa $GITHUB_REF_NAME
